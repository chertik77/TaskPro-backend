generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String  @unique
  password       String
  theme          Theme   @default(light)
  avatar         String? @default("https://res.cloudinary.com/dmbnnewoy/image/upload/v1706958682/TaskPro/user_avatar_default/user_light.png")
  avatarPublicId String? @map("avatar_public_id")
  boards         Board[]

  @@map("users")
}

enum Theme {
  light
  dark
  violet
}

model Session {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @map("user_id")

  @@map("sessions")
}

model Board {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  icon       String
  background Background
  userId     String     @map("user_id") @db.ObjectId
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  columns    Column[]

  @@map("boards")
}

type Background {
  url               String
  identifier        String
  hasWhiteTextColor Boolean @default(false)
}

model Column {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  boardId String @map("board_id") @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  cards   Card[]

  @@map("columns")
}

model Card {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  priority    Priority
  deadline    DateTime
  order       Int      @default(1)
  columnId    String   @map("column_id") @db.ObjectId
  column      Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)

  @@map("cards")
}

enum Priority {
  Without
  Low
  Medium
  High
}
